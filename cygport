set -x

if [ -z "$CMAKE_REPO_DIR" ]; then
  error "CMAKE_REPO_DIR must specify repo root" >&2
fi

NAME=cmake
VERSION=$(cd "$(cygpath "$CMAKE_REPO_DIR")"; git rev-parse HEAD)
RELEASE=1

SRC_URI="fake.source.tar.gz"
tar czf "$SRC_URI" -T /dev/null
SRC_DIR=.

PKG_NAMES=cmake
cmake_CONTENTS='bin/ share/'

src_compile() {
  cmake_src_prep

  openssl_source_dir="$B/openssl"
  openssl_install_dir="$openssl_source_dir/_install"

  mkdir "$openssl_source_dir"
  cd "$openssl_source_dir"
  curl -L https://github.com/openssl/openssl/releases/download/OpenSSL_1_1_1w/openssl-1.1.1w.tar.gz \
    | tar xvzf - --strip=1

  ./Configure Cygwin-x86_64 no-shared --prefix="$openssl_install_dir"
  cygmake install_sw -j1 VERBOSE=1 || error "openssl build failed"

  cd "$B"
  export CC CXX
  "$S/bootstrap" --prefix=/ -- \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_TESTING=NO \
    -DBUILD_CursesDialog=NO \
    -DCMake_VERSION_NO_GIT=YES \
    -DCMake_VERSION_ADD_DEBUGGER_SUFFIX=YES \
    -DCURSES_USE_NCURSES=NO \
    -DCMAKE_USE_OPENSSL=YES \
    -DOPENSSL_USE_STATIC_LIBS=YES \
    -DOPENSSL_ROOT_DIR="$openssl_install_dir" \
    -DCMake_VERSION_EXTRA="(CMake; JetBrains IDE bundle; build $BUILD_NUMBER)" \
      || error "bootstrap failed"
  cygmake VERBOSE=1
}

src_install() {
    cd "$B"
    cyginstall
}

cmake_src_prep() {
  rm -rf "$SRC_URI"
  cp -r "$(cygpath "$CMAKE_REPO_DIR")/." "$S" || error "cmake copy failed"

  cd "$S"; { sed -e 's/\r*$/\r/' | patch -p1 --binary || error "cmake source patch failed"; } <<'EOF'
diff --git a/CMakeLists.txt b/CMakeLists.txt
index d559c08551..71a66dfe83 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -543,9 +543,6 @@ if(NOT CMake_TEST_EXTERNAL_CMAKE)
     REGEX "Help/(dev|guide)($|/)" EXCLUDE
     )
 
-  # Install auxiliary files integrating with other tools.
-  add_subdirectory(Auxiliary)
-
   # Optionally sign installed binaries.
   if(CMake_INSTALL_SIGNTOOL)
     configure_file(Source/CMakeInstallSignTool.cmake.in Source/CMakeInstallSignTool.cmake @ONLY)
diff --git a/Source/CMakeLists.txt b/Source/CMakeLists.txt
index 21bd097545..0188df9dd6 100644
--- a/Source/CMakeLists.txt
+++ b/Source/CMakeLists.txt
@@ -9,6 +9,9 @@ if(NOT CMAKE_SYSTEM_NAME STREQUAL "QNX")
   set(CMAKE_CXX_EXTENSIONS FALSE)
 endif()
 
+set(CMAKE_C_EXTENSIONS TRUE)
+set(CMAKE_CXX_EXTENSIONS TRUE)
+
 include(CheckIncludeFile)
 
 if(APPLE)
diff --git a/Utilities/Sphinx/CMakeLists.txt b/Utilities/Sphinx/CMakeLists.txt
index bde6c6bf20..7a9e614dc8 100644
--- a/Utilities/Sphinx/CMakeLists.txt
+++ b/Utilities/Sphinx/CMakeLists.txt
@@ -1,6 +1,8 @@
 # Distributed under the OSI-approved BSD 3-Clause License.  See accompanying
 # file Copyright.txt or https://cmake.org/licensing for details.
 
+return()
+
 if(NOT CMake_SOURCE_DIR)
   set(CMakeHelp_STANDALONE 1)
   cmake_minimum_required(VERSION 3.13...3.25 FATAL_ERROR)
diff --git a/Utilities/std/CMakeLists.txt b/Utilities/std/CMakeLists.txt
index 23d9104644..c69ddb393c 100644
--- a/Utilities/std/CMakeLists.txt
+++ b/Utilities/std/CMakeLists.txt
@@ -1,7 +1,7 @@
 
 # To ensure maximum portability across various compilers and platforms
 # deactivate any compiler extensions
-set(CMAKE_CXX_EXTENSIONS FALSE)
+set(CMAKE_CXX_EXTENSIONS TRUE)
 
 # source files for CMake std library
 set(SRCS cm/bits/fs_path.cxx


EOF
}
